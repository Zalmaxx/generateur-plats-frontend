name: Build and Push Docker Image

on:
  push:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Get short commit
        id: vars
        run: echo "::set-output name=short_commit::$(git rev-parse --short HEAD)"

      - name: Set environment variables
        run: echo "REPO_NAME=$(echo ${{ github.repository }} | tr '[:upper:]' '[:lower:]')" >> $GITHUB_ENV

      - name: Set environment variables
        run: echo $GITHUB_TOKEN

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@65b78e6e13532edd9afa3aa52ac7964289d1a9c1
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and push to GitHub Container Registry
        uses: docker/build-push-action@v4
        with:
          context: .
          push: true
          tags: ghcr.io/${{ env.REPO_NAME }}/angular-app:latest, ghcr.io/${{ env.REPO_NAME }}/angular-app:1.0.0-${{ steps.vars.outputs.short_commit }}

      - name: Log in to Azure Container Registry
        uses: docker/login-action@65b78e6e13532edd9afa3aa52ac7964289d1a9c1
        with:
          registry: ${{ vars.AZURE_REGISTRY }}
          username: ${{ secrets.ACR_USERNAME }}
          password: ${{ secrets.ACR_PASSWORD }}

      - name: Build and push to Azure Container Registry
        if: always()
        uses: docker/build-push-action@v4
        with:
          context: .
          push: true
          tags: ${{ vars.AZURE_REGISTRY }}/angular-app:latest, ${{ vars.AZURE_REGISTRY }}/angular-app:1.0.0-${{ steps.vars.outputs.short_commit }}

      - name: Official SonarQube Scan
        uses: SonarSource/sonarqube-scan-action@v4.1.0
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
          SONAR_HOST_URL: ${{ vars.SONAR_URL }}
        with:
          projectBaseDir: pokeapi
          args: '-Dsonar.projectKey=Acdc-frontend'
