name: CI/CD Pipeline

on:
  push:
    branches:
      - main

jobs:
  build-angular:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 18

      - name: Cache node_modules
        uses: actions/cache@v2
        with:
          path: node_modules
          key: ${{ runner.os }}-node_modules-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node_modules-

      - name: Install dependencies
        run: npm ci

      - name: Build Angular app
        run: npm run build -- --configuration=production

      - name: Upload build artifacts
        uses: actions/upload-artifact@v3
        with:
          name: dist
          path: dist/generateur-plats-frontend

  build:
    runs-on: ubuntu-latest
    needs: build-angular
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Download JAR artifact
        uses: actions/download-artifact@v3
        with:
          name: dist
          path: dist/generateur-plats-frontend

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Define image tag
        id: vars
        run: echo "TAG=1.0.0-${GITHUB_SHA::7}" >> $GITHUB_ENV

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@v4
        with:
          images: ghcr.io/${{ github.repository }}
          tags: |
            type=sha

      - name: Build and push Docker image to GitHub Container Registry
        id: push
        uses: docker/build-push-action@v4
        with:
          context: .
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}

      - name: Log in to Azure Container Registry
        uses: azure/docker-login@v1
        with:
          login-server: ${{ vars.AZURE_REGISTRY }}
          username: ${{ secrets.ACR_USERNAME }}
          password: ${{ secrets.ACR_PASSWORD }}

      - name: Build and push Docker image to Azure Container Registry
        run: |
          docker build -t ${{ vars.AZURE_REGISTRY }}/angular-app:${{ env.TAG }} .
          docker push ${{ vars.AZURE_REGISTRY }}/angular-app:${{ env.TAG }}
        continue-on-error: true
